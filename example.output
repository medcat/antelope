Productions:
    $start(0) → expression(0:1) $
    expression(0:1) → NUMBER
    expression(0:1) → expression(0:1) ADD expression(9:14)
    expression(0:1) → expression(0:1) SUBTRACT expression(10:15)
    expression(0:1) → expression(0:1) MULTIPLY expression(11:16)
    expression(0:1) → expression(0:1) DIVIDE expression(12:17)
    expression(0:1) → LPAREN expression(7:13) RPAREN
    expression(7:13) → NUMBER
    expression(7:13) → expression(7:13) ADD expression(9:14)
    expression(7:13) → expression(7:13) SUBTRACT expression(10:15)
    expression(7:13) → expression(7:13) MULTIPLY expression(11:16)
    expression(7:13) → expression(7:13) DIVIDE expression(12:17)
    expression(7:13) → LPAREN expression(7:13) RPAREN
    expression(9:14) → NUMBER
    expression(9:14) → expression(9:14) ADD expression(9:14)
    expression(9:14) → expression(9:14) SUBTRACT expression(10:15)
    expression(9:14) → expression(9:14) MULTIPLY expression(11:16)
    expression(9:14) → expression(9:14) DIVIDE expression(12:17)
    expression(9:14) → LPAREN expression(7:13) RPAREN
    expression(10:15) → NUMBER
    expression(10:15) → expression(10:15) ADD expression(9:14)
    expression(10:15) → expression(10:15) SUBTRACT expression(10:15)
    expression(10:15) → expression(10:15) MULTIPLY expression(11:16)
    expression(10:15) → expression(10:15) DIVIDE expression(12:17)
    expression(10:15) → LPAREN expression(7:13) RPAREN
    expression(11:16) → NUMBER
    expression(11:16) → expression(11:16) ADD expression(9:14)
    expression(11:16) → expression(11:16) SUBTRACT expression(10:15)
    expression(11:16) → expression(11:16) MULTIPLY expression(11:16)
    expression(11:16) → expression(11:16) DIVIDE expression(12:17)
    expression(11:16) → LPAREN expression(7:13) RPAREN
    expression(12:17) → NUMBER
    expression(12:17) → expression(12:17) ADD expression(9:14)
    expression(12:17) → expression(12:17) SUBTRACT expression(10:15)
    expression(12:17) → expression(12:17) MULTIPLY expression(11:16)
    expression(12:17) → expression(12:17) DIVIDE expression(12:17)
    expression(12:17) → LPAREN expression(7:13) RPAREN

follow():
  $start(0): 
  expression(0:1): ADD SUBTRACT MULTIPLY DIVIDE RPAREN $
  expression(7:13): ADD SUBTRACT MULTIPLY DIVIDE RPAREN $
  expression(9:14): ADD SUBTRACT MULTIPLY DIVIDE RPAREN $
  expression(10:15): ADD SUBTRACT MULTIPLY DIVIDE RPAREN $
  expression(11:16): ADD SUBTRACT MULTIPLY DIVIDE RPAREN $
  expression(12:17): ADD SUBTRACT MULTIPLY DIVIDE RPAREN $

State 0:
  rules:
    $start(0) →  • expression(0:1) $
      {}
    expression(0:1) →  • NUMBER
      {}
    expression(0:1) →  • expression(0:1) ADD expression(9:14)
      {}
    expression(0:1) →  • expression(0:1) SUBTRACT expression(10:15)
      {}
    expression(0:1) →  • expression(0:1) MULTIPLY expression(11:16)
      {}
    expression(0:1) →  • expression(0:1) DIVIDE expression(12:17)
      {}
    expression(0:1) →  • LPAREN expression(7:13) RPAREN
      {}

  transitions:
    expression: State 1
    NUMBER: State 2
    LPAREN: State 7

State 1:
  rules:
    $start(0) → expression(0:1) • $
      {}
    expression(0:1) → expression(0:1) • ADD expression(9:14)
      {}
    expression(0:1) → expression(0:1) • SUBTRACT expression(10:15)
      {}
    expression(0:1) → expression(0:1) • MULTIPLY expression(11:16)
      {}
    expression(0:1) → expression(0:1) • DIVIDE expression(12:17)
      {}

  transitions:
    $: State 8
    ADD: State 9
    SUBTRACT: State 10
    MULTIPLY: State 11
    DIVIDE: State 12

State 2:
  rules:
    expression(0:1) → NUMBER • 
      {ADD, SUBTRACT, MULTIPLY, DIVIDE, RPAREN, $}

  transitions:

State 3:
  rules:
    expression(0:1) → expression(0:1) • ADD expression(9:14)
      {}

  transitions:
    ADD: State 9

State 4:
  rules:
    expression(0:1) → expression(0:1) • SUBTRACT expression(10:15)
      {}

  transitions:
    SUBTRACT: State 10

State 5:
  rules:
    expression(0:1) → expression(0:1) • MULTIPLY expression(11:16)
      {}

  transitions:
    MULTIPLY: State 11

State 6:
  rules:
    expression(0:1) → expression(0:1) • DIVIDE expression(12:17)
      {}

  transitions:
    DIVIDE: State 12

State 7:
  rules:
    expression(0:1) → LPAREN • expression(7:13) RPAREN
      {}
    expression(7:13) →  • NUMBER
      {}
    expression(7:13) →  • expression(7:13) ADD expression(9:14)
      {}
    expression(7:13) →  • expression(7:13) SUBTRACT expression(10:15)
      {}
    expression(7:13) →  • expression(7:13) MULTIPLY expression(11:16)
      {}
    expression(7:13) →  • expression(7:13) DIVIDE expression(12:17)
      {}
    expression(7:13) →  • LPAREN expression(7:13) RPAREN
      {}

  transitions:
    expression: State 13
    NUMBER: State 2
    LPAREN: State 7

State 8:
  rules:
    $start(0) → expression(0:1) $ • 
      {}

  transitions:

State 9:
  rules:
    expression(0:1) → expression(0:1) ADD • expression(9:14)
      {}
    expression(9:14) →  • NUMBER
      {}
    expression(9:14) →  • expression(9:14) ADD expression(9:14)
      {}
    expression(9:14) →  • expression(9:14) SUBTRACT expression(10:15)
      {}
    expression(9:14) →  • expression(9:14) MULTIPLY expression(11:16)
      {}
    expression(9:14) →  • expression(9:14) DIVIDE expression(12:17)
      {}
    expression(9:14) →  • LPAREN expression(7:13) RPAREN
      {}

  transitions:
    expression: State 14
    NUMBER: State 2
    LPAREN: State 7

State 10:
  rules:
    expression(0:1) → expression(0:1) SUBTRACT • expression(10:15)
      {}
    expression(10:15) →  • NUMBER
      {}
    expression(10:15) →  • expression(10:15) ADD expression(9:14)
      {}
    expression(10:15) →  • expression(10:15) SUBTRACT expression(10:15)
      {}
    expression(10:15) →  • expression(10:15) MULTIPLY expression(11:16)
      {}
    expression(10:15) →  • expression(10:15) DIVIDE expression(12:17)
      {}
    expression(10:15) →  • LPAREN expression(7:13) RPAREN
      {}

  transitions:
    expression: State 15
    NUMBER: State 2
    LPAREN: State 7

State 11:
  rules:
    expression(0:1) → expression(0:1) MULTIPLY • expression(11:16)
      {}
    expression(11:16) →  • NUMBER
      {}
    expression(11:16) →  • expression(11:16) ADD expression(9:14)
      {}
    expression(11:16) →  • expression(11:16) SUBTRACT expression(10:15)
      {}
    expression(11:16) →  • expression(11:16) MULTIPLY expression(11:16)
      {}
    expression(11:16) →  • expression(11:16) DIVIDE expression(12:17)
      {}
    expression(11:16) →  • LPAREN expression(7:13) RPAREN
      {}

  transitions:
    expression: State 16
    NUMBER: State 2
    LPAREN: State 7

State 12:
  rules:
    expression(0:1) → expression(0:1) DIVIDE • expression(12:17)
      {}
    expression(12:17) →  • NUMBER
      {}
    expression(12:17) →  • expression(12:17) ADD expression(9:14)
      {}
    expression(12:17) →  • expression(12:17) SUBTRACT expression(10:15)
      {}
    expression(12:17) →  • expression(12:17) MULTIPLY expression(11:16)
      {}
    expression(12:17) →  • expression(12:17) DIVIDE expression(12:17)
      {}
    expression(12:17) →  • LPAREN expression(7:13) RPAREN
      {}

  transitions:
    expression: State 17
    NUMBER: State 2
    LPAREN: State 7

State 13:
  rules:
    expression(0:1) → LPAREN expression(7:13) • RPAREN
      {}
    $start(0) → expression(0:1) • $
      {}
    expression(0:1) → expression(0:1) • ADD expression(9:14)
      {}
    expression(0:1) → expression(0:1) • SUBTRACT expression(10:15)
      {}
    expression(0:1) → expression(0:1) • MULTIPLY expression(11:16)
      {}
    expression(0:1) → expression(0:1) • DIVIDE expression(12:17)
      {}

  transitions:
    $: State 8
    ADD: State 9
    SUBTRACT: State 10
    MULTIPLY: State 11
    DIVIDE: State 12
    RPAREN: State 18

State 14:
  rules:
    expression(0:1) → expression(0:1) ADD expression(9:14) • 
      {ADD, SUBTRACT, MULTIPLY, DIVIDE, RPAREN, $}
    $start(0) → expression(0:1) • $
      {}
    expression(0:1) → expression(0:1) • ADD expression(9:14)
      {}
    expression(0:1) → expression(0:1) • SUBTRACT expression(10:15)
      {}
    expression(0:1) → expression(0:1) • MULTIPLY expression(11:16)
      {}
    expression(0:1) → expression(0:1) • DIVIDE expression(12:17)
      {}

  transitions:
    $: State 8
    ADD: State 9
    SUBTRACT: State 10
    MULTIPLY: State 11
    DIVIDE: State 12

State 15:
  rules:
    expression(0:1) → expression(0:1) SUBTRACT expression(10:15) • 
      {ADD, SUBTRACT, MULTIPLY, DIVIDE, RPAREN, $}
    $start(0) → expression(0:1) • $
      {}
    expression(0:1) → expression(0:1) • ADD expression(9:14)
      {}
    expression(0:1) → expression(0:1) • SUBTRACT expression(10:15)
      {}
    expression(0:1) → expression(0:1) • MULTIPLY expression(11:16)
      {}
    expression(0:1) → expression(0:1) • DIVIDE expression(12:17)
      {}

  transitions:
    $: State 8
    ADD: State 9
    SUBTRACT: State 10
    MULTIPLY: State 11
    DIVIDE: State 12

State 16:
  rules:
    expression(0:1) → expression(0:1) MULTIPLY expression(11:16) • 
      {ADD, SUBTRACT, MULTIPLY, DIVIDE, RPAREN, $}
    $start(0) → expression(0:1) • $
      {}
    expression(0:1) → expression(0:1) • ADD expression(9:14)
      {}
    expression(0:1) → expression(0:1) • SUBTRACT expression(10:15)
      {}
    expression(0:1) → expression(0:1) • MULTIPLY expression(11:16)
      {}
    expression(0:1) → expression(0:1) • DIVIDE expression(12:17)
      {}

  transitions:
    $: State 8
    ADD: State 9
    SUBTRACT: State 10
    MULTIPLY: State 11
    DIVIDE: State 12

State 17:
  rules:
    expression(0:1) → expression(0:1) DIVIDE expression(12:17) • 
      {ADD, SUBTRACT, MULTIPLY, DIVIDE, RPAREN, $}
    $start(0) → expression(0:1) • $
      {}
    expression(0:1) → expression(0:1) • ADD expression(9:14)
      {}
    expression(0:1) → expression(0:1) • SUBTRACT expression(10:15)
      {}
    expression(0:1) → expression(0:1) • MULTIPLY expression(11:16)
      {}
    expression(0:1) → expression(0:1) • DIVIDE expression(12:17)
      {}

  transitions:
    $: State 8
    ADD: State 9
    SUBTRACT: State 10
    MULTIPLY: State 11
    DIVIDE: State 12

State 18:
  rules:
    expression(0:1) → LPAREN expression(7:13) RPAREN • 
      {ADD, SUBTRACT, MULTIPLY, DIVIDE, RPAREN, $}

  transitions:

