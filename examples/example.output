Productions:
  0 $start(0) → expression(0:1) $ 
  1 expression(0:1) → NUMBER { |a| a[1]        }
  2 expression(0:1) → expression(0:1) "+" expression(5:11) { |a, _, b| a + b }
  3 expression(0:1) → expression(0:1) "-" expression(6:12) { |a, _, b| a - b }
  4 expression(0:1) → expression(0:1) "*" expression(7:13) { |a, _, b| a * b }
  5 expression(0:1) → expression(0:1) "/" expression(8:14) { |a, _, b| a / b }
  6 expression(0:1) → "(" expression(3:9) ")" { |_, a, _| a     }
  7 expression(0:1) → "(" $error ")" 
  1 expression(3:9) → NUMBER { |a| a[1]        }
  2 expression(3:9) → expression(3:9) "+" expression(5:11) { |a, _, b| a + b }
  3 expression(3:9) → expression(3:9) "-" expression(6:12) { |a, _, b| a - b }
  4 expression(3:9) → expression(3:9) "*" expression(7:13) { |a, _, b| a * b }
  5 expression(3:9) → expression(3:9) "/" expression(8:14) { |a, _, b| a / b }
  6 expression(3:9) → "(" expression(3:9) ")" { |_, a, _| a     }
  7 expression(3:9) → "(" $error ")" 
  1 expression(5:11) → NUMBER { |a| a[1]        }
  2 expression(5:11) → expression(5:11) "+" expression(5:11) { |a, _, b| a + b }
  3 expression(5:11) → expression(5:11) "-" expression(6:12) { |a, _, b| a - b }
  4 expression(5:11) → expression(5:11) "*" expression(7:13) { |a, _, b| a * b }
  5 expression(5:11) → expression(5:11) "/" expression(8:14) { |a, _, b| a / b }
  6 expression(5:11) → "(" expression(3:9) ")" { |_, a, _| a     }
  7 expression(5:11) → "(" $error ")" 
  1 expression(6:12) → NUMBER { |a| a[1]        }
  2 expression(6:12) → expression(6:12) "+" expression(5:11) { |a, _, b| a + b }
  3 expression(6:12) → expression(6:12) "-" expression(6:12) { |a, _, b| a - b }
  4 expression(6:12) → expression(6:12) "*" expression(7:13) { |a, _, b| a * b }
  5 expression(6:12) → expression(6:12) "/" expression(8:14) { |a, _, b| a / b }
  6 expression(6:12) → "(" expression(3:9) ")" { |_, a, _| a     }
  7 expression(6:12) → "(" $error ")" 
  1 expression(7:13) → NUMBER { |a| a[1]        }
  2 expression(7:13) → expression(7:13) "+" expression(5:11) { |a, _, b| a + b }
  3 expression(7:13) → expression(7:13) "-" expression(6:12) { |a, _, b| a - b }
  4 expression(7:13) → expression(7:13) "*" expression(7:13) { |a, _, b| a * b }
  5 expression(7:13) → expression(7:13) "/" expression(8:14) { |a, _, b| a / b }
  6 expression(7:13) → "(" expression(3:9) ")" { |_, a, _| a     }
  7 expression(7:13) → "(" $error ")" 
  1 expression(8:14) → NUMBER { |a| a[1]        }
  2 expression(8:14) → expression(8:14) "+" expression(5:11) { |a, _, b| a + b }
  3 expression(8:14) → expression(8:14) "-" expression(6:12) { |a, _, b| a - b }
  4 expression(8:14) → expression(8:14) "*" expression(7:13) { |a, _, b| a * b }
  5 expression(8:14) → expression(8:14) "/" expression(8:14) { |a, _, b| a / b }
  6 expression(8:14) → "(" expression(3:9) ")" { |_, a, _| a     }
  7 expression(8:14) → "(" $error ")" 

Nontemrinals:
["$start(0)", "expression(0:1)", "expression(3:9)", "expression(5:11)", "expression(6:12)", "expression(7:13)", "expression(8:14)"]

Precedence:
  --- highest
  nonassoc 4:
    {LPAREN, RPAREN}
  left     3:
    {MULTIPLY, DIVIDE}
  left     2:
    {ADD, SUBTRACT}
  nonassoc 1:
    {_}
  nonassoc 0:
    {$}
  --- lowest

  State 0:
    0/n0: $start →  • expression $
      {} ($start)
    1/n1: expression →  • NUMBER
      {} (expression)
    2/l2: expression →  • expression "+" expression
      {} (expression)
    3/l2: expression →  • expression "-" expression
      {} (expression)
    4/l3: expression →  • expression "*" expression
      {} (expression)
    5/l3: expression →  • expression "/" expression
      {} (expression)
    6/n4: expression →  • "(" expression ")"
      {} (expression)
    7/n4: expression →  • "(" $error ")"
      {} (expression)
    transitions:
      expression: State 1
      NUMBER: State 2
      LPAREN: State 3

  State 1:
    8/n0: $start → expression • $
      {} ($start)
    9/l2: expression → expression • "+" expression
      {} (expression)
    10/l2: expression → expression • "-" expression
      {} (expression)
    11/l3: expression → expression • "*" expression
      {} (expression)
    12/l3: expression → expression • "/" expression
      {} (expression)
    transitions:
      $: State 4
      ADD: State 5
      SUBTRACT: State 6
      MULTIPLY: State 7
      DIVIDE: State 8

  State 2:
    13/n1: expression → NUMBER • 
      {$, "+", "-", "*", "/", ")"} (expression)
    reductions:
      $: Rule 1
      ADD: Rule 1
      SUBTRACT: Rule 1
      MULTIPLY: Rule 1
      DIVIDE: Rule 1
      RPAREN: Rule 1

  State 3:
    14/n4: expression → "(" • expression ")"
      {} (expression)
    15/n1: expression →  • NUMBER
      {} (expression)
    16/l2: expression →  • expression "+" expression
      {} (expression)
    17/l2: expression →  • expression "-" expression
      {} (expression)
    18/l3: expression →  • expression "*" expression
      {} (expression)
    19/l3: expression →  • expression "/" expression
      {} (expression)
    20/n4: expression →  • "(" expression ")"
      {} (expression)
    21/n4: expression →  • "(" $error ")"
      {} (expression)
    22/n4: expression → "(" • $error ")"
      {} (expression)
    transitions:
      expression: State 9
      NUMBER: State 2
      LPAREN: State 3
      $error: State 10

  State 4:
    23/n0: $start → expression $ • 
      {} ($start)
    accepting:
      $: Rule 0

  State 5:
    24/l2: expression → expression "+" • expression
      {} (expression)
    25/n1: expression →  • NUMBER
      {} (expression)
    26/l2: expression →  • expression "+" expression
      {} (expression)
    27/l2: expression →  • expression "-" expression
      {} (expression)
    28/l3: expression →  • expression "*" expression
      {} (expression)
    29/l3: expression →  • expression "/" expression
      {} (expression)
    30/n4: expression →  • "(" expression ")"
      {} (expression)
    31/n4: expression →  • "(" $error ")"
      {} (expression)
    transitions:
      expression: State 11
      NUMBER: State 2
      LPAREN: State 3

  State 6:
    32/l2: expression → expression "-" • expression
      {} (expression)
    33/n1: expression →  • NUMBER
      {} (expression)
    34/l2: expression →  • expression "+" expression
      {} (expression)
    35/l2: expression →  • expression "-" expression
      {} (expression)
    36/l3: expression →  • expression "*" expression
      {} (expression)
    37/l3: expression →  • expression "/" expression
      {} (expression)
    38/n4: expression →  • "(" expression ")"
      {} (expression)
    39/n4: expression →  • "(" $error ")"
      {} (expression)
    transitions:
      expression: State 12
      NUMBER: State 2
      LPAREN: State 3

  State 7:
    40/l3: expression → expression "*" • expression
      {} (expression)
    41/n1: expression →  • NUMBER
      {} (expression)
    42/l2: expression →  • expression "+" expression
      {} (expression)
    43/l2: expression →  • expression "-" expression
      {} (expression)
    44/l3: expression →  • expression "*" expression
      {} (expression)
    45/l3: expression →  • expression "/" expression
      {} (expression)
    46/n4: expression →  • "(" expression ")"
      {} (expression)
    47/n4: expression →  • "(" $error ")"
      {} (expression)
    transitions:
      expression: State 13
      NUMBER: State 2
      LPAREN: State 3

  State 8:
    48/l3: expression → expression "/" • expression
      {} (expression)
    49/n1: expression →  • NUMBER
      {} (expression)
    50/l2: expression →  • expression "+" expression
      {} (expression)
    51/l2: expression →  • expression "-" expression
      {} (expression)
    52/l3: expression →  • expression "*" expression
      {} (expression)
    53/l3: expression →  • expression "/" expression
      {} (expression)
    54/n4: expression →  • "(" expression ")"
      {} (expression)
    55/n4: expression →  • "(" $error ")"
      {} (expression)
    transitions:
      expression: State 14
      NUMBER: State 2
      LPAREN: State 3

  State 9:
    56/n4: expression → "(" expression • ")"
      {} (expression)
    57/l2: expression → expression • "+" expression
      {} (expression)
    58/l2: expression → expression • "-" expression
      {} (expression)
    59/l3: expression → expression • "*" expression
      {} (expression)
    60/l3: expression → expression • "/" expression
      {} (expression)
    transitions:
      RPAREN: State 15
      ADD: State 5
      SUBTRACT: State 6
      MULTIPLY: State 7
      DIVIDE: State 8

  State 10:
    61/n4: expression → "(" $error • ")"
      {} (expression)
    transitions:
      RPAREN: State 16

  State 11:
    62/l2: expression → expression "+" expression • 
      {$, "+", "-", "*", "/", ")"} (expression)
    63/l2: expression → expression • "+" expression
      {} (expression)
    64/l2: expression → expression • "-" expression
      {} (expression)
    65/l3: expression → expression • "*" expression
      {} (expression)
    66/l3: expression → expression • "/" expression
      {} (expression)
    transitions:
      MULTIPLY: State 7
      DIVIDE: State 8
    reductions:
      ADD: Rule 2
      SUBTRACT: Rule 2
      $: Rule 2
      RPAREN: Rule 2

  State 12:
    67/l2: expression → expression "-" expression • 
      {$, "+", "-", "*", "/", ")"} (expression)
    68/l2: expression → expression • "+" expression
      {} (expression)
    69/l2: expression → expression • "-" expression
      {} (expression)
    70/l3: expression → expression • "*" expression
      {} (expression)
    71/l3: expression → expression • "/" expression
      {} (expression)
    transitions:
      MULTIPLY: State 7
      DIVIDE: State 8
    reductions:
      ADD: Rule 3
      SUBTRACT: Rule 3
      $: Rule 3
      RPAREN: Rule 3

  State 13:
    72/l3: expression → expression "*" expression • 
      {$, "+", "-", "*", "/", ")"} (expression)
    73/l2: expression → expression • "+" expression
      {} (expression)
    74/l2: expression → expression • "-" expression
      {} (expression)
    75/l3: expression → expression • "*" expression
      {} (expression)
    76/l3: expression → expression • "/" expression
      {} (expression)
    reductions:
      ADD: Rule 4
      SUBTRACT: Rule 4
      MULTIPLY: Rule 4
      DIVIDE: Rule 4
      $: Rule 4
      RPAREN: Rule 4

  State 14:
    77/l3: expression → expression "/" expression • 
      {$, "+", "-", "*", "/", ")"} (expression)
    78/l2: expression → expression • "+" expression
      {} (expression)
    79/l2: expression → expression • "-" expression
      {} (expression)
    80/l3: expression → expression • "*" expression
      {} (expression)
    81/l3: expression → expression • "/" expression
      {} (expression)
    reductions:
      ADD: Rule 5
      SUBTRACT: Rule 5
      MULTIPLY: Rule 5
      DIVIDE: Rule 5
      $: Rule 5
      RPAREN: Rule 5

  State 15:
    82/n4: expression → "(" expression ")" • 
      {$, "+", "-", "*", "/", ")"} (expression)
    reductions:
      $: Rule 6
      ADD: Rule 6
      SUBTRACT: Rule 6
      MULTIPLY: Rule 6
      DIVIDE: Rule 6
      RPAREN: Rule 6

  State 16:
    83/n4: expression → "(" $error ")" • 
      {$, "+", "-", "*", "/", ")"} (expression)
    reductions:
      $: Rule 7
      ADD: Rule 7
      SUBTRACT: Rule 7
      MULTIPLY: Rule 7
      DIVIDE: Rule 7
      RPAREN: Rule 7

