Productions:
  expression → NUMBER { |a| a[1]        }
  expression → expression "+" expression { |a, _, b| a + b }
  expression → expression "-" expression { |a, _, b| a - b }
  expression → expression "*" expression { |a, _, b| a * b }
  expression → expression "/" expression { |a, _, b| a / b }
  expression → "(" expression ")" { |_, a, _| a     }
  expression → "(" $error ")" 
  $start → expression $ 

Precedence:
  --- highest
  nonassoc 4:
    {LPAREN, RPAREN}
  left     3:
    {MULTIPLY, DIVIDE}
  left     2:
    {ADD, SUBTRACT}
  nonassoc 1:
    {_}
  nonassoc 0:
    {$}
  --- lowest

  State 0:
    0/n0: $start(0) →  • expression(0:1) $
      {}
    1/n1: expression(0:1) →  • NUMBER
      {}
    2/l2: expression(0:1) →  • expression(0:1) "+" expression(10:16)
      {}
    3/l2: expression(0:1) →  • expression(0:1) "-" expression(11:17)
      {}
    4/l3: expression(0:1) →  • expression(0:1) "*" expression(12:18)
      {}
    5/l3: expression(0:1) →  • expression(0:1) "/" expression(13:19)
      {}
    6/n4: expression(0:1) →  • "(" expression(7:14) ")"
      {}
    7/n4: expression(0:1) →  • "(" $error ")"
      {}
    transitions:
      expression: State 1
      NUMBER: State 2
      LPAREN: State 7

  State 1:
    8/n0: $start → expression • $
      {}
    83/l2: expression → expression • "+" expression
      {}
    84/l2: expression → expression • "-" expression
      {}
    85/l3: expression → expression • "*" expression
      {}
    86/l3: expression → expression • "/" expression
      {}
    transitions:
      $: State 9
      ADD: State 10
      SUBTRACT: State 11
      MULTIPLY: State 12
      DIVIDE: State 13

  State 2:
    13/n1: expression → NUMBER • 
      {$, "+", "-", "*", "/", ")"}
    reductions:
      $: Rule 1
      ADD: Rule 1
      SUBTRACT: Rule 1
      MULTIPLY: Rule 1
      DIVIDE: Rule 1
      RPAREN: Rule 1

  State 3:
    83/l2: expression → expression • "+" expression
      {}
    transitions:
      ADD: State 10

  State 4:
    84/l2: expression → expression • "-" expression
      {}
    transitions:
      SUBTRACT: State 11

  State 5:
    85/l3: expression → expression • "*" expression
      {}
    transitions:
      MULTIPLY: State 12

  State 6:
    86/l3: expression → expression • "/" expression
      {}
    transitions:
      DIVIDE: State 13

  State 7:
    18/n4: expression → "(" • expression ")"
      {}
    19/n1: expression(7:14) →  • NUMBER
      {}
    20/l2: expression(7:14) →  • expression(7:14) "+" expression(10:16)
      {}
    21/l2: expression(7:14) →  • expression(7:14) "-" expression(11:17)
      {}
    22/l3: expression(7:14) →  • expression(7:14) "*" expression(12:18)
      {}
    23/l3: expression(7:14) →  • expression(7:14) "/" expression(13:19)
      {}
    24/n4: expression(7:14) →  • "(" expression(7:14) ")"
      {}
    25/n4: expression(7:14) →  • "(" $error ")"
      {}
    27/n4: expression → "(" • $error ")"
      {}
    transitions:
      expression: State 14
      NUMBER: State 2
      LPAREN: State 7
      $error: State 15

  State 8:
    27/n4: expression → "(" • $error ")"
      {}
    transitions:
      $error: State 15

  State 9:
    28/n0: $start → expression $ • 
      {}
    accepting:
      $: Rule 0

  State 10:
    29/l2: expression → expression "+" • expression
      {}
    30/n1: expression(10:16) →  • NUMBER
      {}
    31/l2: expression(10:16) →  • expression(10:16) "+" expression(10:16)
      {}
    32/l2: expression(10:16) →  • expression(10:16) "-" expression(11:17)
      {}
    33/l3: expression(10:16) →  • expression(10:16) "*" expression(12:18)
      {}
    34/l3: expression(10:16) →  • expression(10:16) "/" expression(13:19)
      {}
    35/n4: expression(10:16) →  • "(" expression(7:14) ")"
      {}
    36/n4: expression(10:16) →  • "(" $error ")"
      {}
    transitions:
      expression: State 16
      NUMBER: State 2
      LPAREN: State 7

  State 11:
    37/l2: expression → expression "-" • expression
      {}
    38/n1: expression(11:17) →  • NUMBER
      {}
    39/l2: expression(11:17) →  • expression(11:17) "+" expression(10:16)
      {}
    40/l2: expression(11:17) →  • expression(11:17) "-" expression(11:17)
      {}
    41/l3: expression(11:17) →  • expression(11:17) "*" expression(12:18)
      {}
    42/l3: expression(11:17) →  • expression(11:17) "/" expression(13:19)
      {}
    43/n4: expression(11:17) →  • "(" expression(7:14) ")"
      {}
    44/n4: expression(11:17) →  • "(" $error ")"
      {}
    transitions:
      expression: State 17
      NUMBER: State 2
      LPAREN: State 7

  State 12:
    45/l3: expression → expression "*" • expression
      {}
    46/n1: expression(12:18) →  • NUMBER
      {}
    47/l2: expression(12:18) →  • expression(12:18) "+" expression(10:16)
      {}
    48/l2: expression(12:18) →  • expression(12:18) "-" expression(11:17)
      {}
    49/l3: expression(12:18) →  • expression(12:18) "*" expression(12:18)
      {}
    50/l3: expression(12:18) →  • expression(12:18) "/" expression(13:19)
      {}
    51/n4: expression(12:18) →  • "(" expression(7:14) ")"
      {}
    52/n4: expression(12:18) →  • "(" $error ")"
      {}
    transitions:
      expression: State 18
      NUMBER: State 2
      LPAREN: State 7

  State 13:
    53/l3: expression → expression "/" • expression
      {}
    54/n1: expression(13:19) →  • NUMBER
      {}
    55/l2: expression(13:19) →  • expression(13:19) "+" expression(10:16)
      {}
    56/l2: expression(13:19) →  • expression(13:19) "-" expression(11:17)
      {}
    57/l3: expression(13:19) →  • expression(13:19) "*" expression(12:18)
      {}
    58/l3: expression(13:19) →  • expression(13:19) "/" expression(13:19)
      {}
    59/n4: expression(13:19) →  • "(" expression(7:14) ")"
      {}
    60/n4: expression(13:19) →  • "(" $error ")"
      {}
    transitions:
      expression: State 19
      NUMBER: State 2
      LPAREN: State 7

  State 14:
    61/n4: expression → "(" expression • ")"
      {}
    83/l2: expression → expression • "+" expression
      {}
    84/l2: expression → expression • "-" expression
      {}
    85/l3: expression → expression • "*" expression
      {}
    86/l3: expression → expression • "/" expression
      {}
    transitions:
      ADD: State 10
      SUBTRACT: State 11
      MULTIPLY: State 12
      DIVIDE: State 13
      RPAREN: State 20

  State 15:
    66/n4: expression → "(" $error • ")"
      {}
    transitions:
      RPAREN: State 21

  State 16:
    67/l2: expression → expression "+" expression • 
      {$, "+", "-", "*", "/", ")"}
    83/l2: expression → expression • "+" expression
      {}
    84/l2: expression → expression • "-" expression
      {}
    85/l3: expression → expression • "*" expression
      {}
    86/l3: expression → expression • "/" expression
      {}
    transitions:
      MULTIPLY: State 12
      DIVIDE: State 13
    reductions:
      ADD: Rule 2
      SUBTRACT: Rule 2
      $: Rule 2
      RPAREN: Rule 2

  State 17:
    72/l2: expression → expression "-" expression • 
      {$, "+", "-", "*", "/", ")"}
    83/l2: expression → expression • "+" expression
      {}
    84/l2: expression → expression • "-" expression
      {}
    85/l3: expression → expression • "*" expression
      {}
    86/l3: expression → expression • "/" expression
      {}
    transitions:
      MULTIPLY: State 12
      DIVIDE: State 13
    reductions:
      ADD: Rule 3
      SUBTRACT: Rule 3
      $: Rule 3
      RPAREN: Rule 3

  State 18:
    77/l3: expression → expression "*" expression • 
      {$, "+", "-", "*", "/", ")"}
    83/l2: expression → expression • "+" expression
      {}
    84/l2: expression → expression • "-" expression
      {}
    85/l3: expression → expression • "*" expression
      {}
    86/l3: expression → expression • "/" expression
      {}
    reductions:
      ADD: Rule 4
      SUBTRACT: Rule 4
      MULTIPLY: Rule 4
      DIVIDE: Rule 4
      $: Rule 4
      RPAREN: Rule 4

  State 19:
    82/l3: expression → expression "/" expression • 
      {$, "+", "-", "*", "/", ")"}
    83/l2: expression → expression • "+" expression
      {}
    84/l2: expression → expression • "-" expression
      {}
    85/l3: expression → expression • "*" expression
      {}
    86/l3: expression → expression • "/" expression
      {}
    reductions:
      ADD: Rule 5
      SUBTRACT: Rule 5
      MULTIPLY: Rule 5
      DIVIDE: Rule 5
      $: Rule 5
      RPAREN: Rule 5

  State 20:
    87/n4: expression → "(" expression ")" • 
      {$, "+", "-", "*", "/", ")"}
    reductions:
      $: Rule 6
      ADD: Rule 6
      SUBTRACT: Rule 6
      MULTIPLY: Rule 6
      DIVIDE: Rule 6
      RPAREN: Rule 6

  State 21:
    88/n4: expression → "(" $error ")" • 
      {$, "+", "-", "*", "/", ")"}
    reductions:
      $: Rule 7
      ADD: Rule 7
      SUBTRACT: Rule 7
      MULTIPLY: Rule 7
      DIVIDE: Rule 7
      RPAREN: Rule 7

