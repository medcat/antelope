%require "~> 0.1"
%type "ruby"

%ruby.error-class { SyntaxError }
%panic-mode true
%terminal NUMBER
%terminal MULTIPLY "*"
%terminal DIVIDE "/"
%terminal ADD "+"
%terminal SUBTRACT "-"
%terminal LPAREN "("
%terminal RPAREN ")"

%nonassoc LPAREN RPAREN
%left MULTIPLY DIVIDE
%left ADD SUBTRACT

%%

expression: NUMBER                         { |a| a[1]        }
          | expression ADD expression      { |a, _, b| a + b }
          | expression SUBTRACT expression { |a, _, b| a - b }
          | expression MULTIPLY expression { |a, _, b| a * b }
          | expression DIVIDE expression   { |a, _, b| a / b }
          | LPAREN expression RPAREN       { |_, a, _| a     }
          | LPAREN error RPAREN            { |_, e, _| e[1]  }

%%

class ExampleParser
  %{write}

  def type(token)
    token[0]
  end
end

input = [
  [:LPAREN],
  [:NUMBER, 2],
  [:ADD],
  [:ADD, 2],
  [:RPAREN],
  [:MULTIPLY],
  [:NUMBER, 3]
]

p ExampleParser.new.parse(input)
